{% extends "base.twig" %}
{% block title %}Forum Post{% endblock %}

{% block content %}
    {% include 'menu.twig' %}
    <main class="centered-container">
        <section class="forum-details" data-forum-id="{{ forum.forumId }}">
            <h1>{{ forum.forumName | upper }}</h1>
            <p>{{ forum.forumDescription }}</p>
        </section>

        <section class="post-list" id="post-list">
            <h2>Forum Posts</h2>
            <ul>
                {% if posts is empty %}
                    <li>No posts available.</li>
                {% else %}
                    {% for post in posts %}
                        <li>
                            <p>{{ post.content }}</p>
                        </li>
                    {% endfor %}
                {% endif %}
            </ul>
        </section>

        <section>
            <h2>Create New Post</h2>
            <form class="form" id="create-post-form" method="post" action="/forums/{{ forum.forumId }}/posts">
                <input type="hidden" id="forumId" name="forumId" value="{{ forum.forumId }}">
                <input type="hidden" id="userId" name="userId" value="<?php echo isset($_SESSION['user_id']) ? $_SESSION['user_id'] : ''; ?>">
                <label for="content">Contents:</label><br>
                <textarea id="content" name="content" required></textarea><br>
                <button type="submit">Submit</button>
            </form>
        </section>
    </main>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        document.getElementById('create-post-form').addEventListener('submit', function (event) {
            event.preventDefault();
            const formData = new FormData(this);

            fetch('/api/forums/{{ forum.forumId }}/posts', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        console.error('Failed to create post:', response.statusText);
                        throw new Error('Failed to create post');
                    }
                })
                .then(data => {
                    document.getElementById('create-post-form').style.display = 'block';

                    const forumList = document.getElementById('post-list');
                    const newForum = document.createElement('li');
                    newForum.innerHTML = `<strong>${data.content}</strong> `;
                    forumList.appendChild(newForum);

                    window.location.reload();
                })
                .then(response => {
                    if (!response.ok) {
                        if (response.status === 403) {
                            console.error('Forbidden: Access to this resource is forbidden.');

                            alert('403 Forbidden: Access to this resource is forbidden.');
                        } else {
                            console.error('Non Critical Error:', response.status);
                            alert('An error occurred: ' + response.status);
                        }
                    } else {
                        return response.json();
                    }
                })
                .then(data => {
                    console.log('Data:', data);
                })
                .catch(error => {
                    console.log("Awaiting fetch")
                    console.error('Fetch error:', error);
                });
        });
    </script>

{% endblock %}