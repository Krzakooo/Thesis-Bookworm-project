{% extends "base.twig" %}
{% block title %}Book Catalogue{% endblock %}

{% block content %}
{% include 'menu.twig' %}
<main class="centered-container-catalogue" >

    <h1>Book Catalogue</h1>
    <button id="createBookBtn">Create New Book</button>

    <form id="createBookForm">
        <label for="titleInput">Title:</label>
        <input type="text" id="titleInput" name="title" required><br>
        <label for="authorInput">Author:</label>
        <input type="text" id="authorInput" name="author" required><br>
        <label for="categoryInput">Category:</label>

        <select id="categoryInput" name="category" required>
            <option value="action">action</option>
            <option value="adventure">adventure</option>
            <option value="mystery">mystery</option>
            <option value="fantasy">fantasy</option>
            <option value="romance">romance</option>
        </select>

        <label for="descriptionInput">Description:</label>
        <textarea id="descriptionInput" name="description" required></textarea><br>
        <label for="pagesInput">Number of pages:</label>
        <input type="number" id="pagesInput" name="pages" required><br>
        <label for="coverInput">Cover image URL:</label>
        <input type="text" id="coverInput" name="cover"><br>
        <button type="submit">Create Book</button>
        <button type="button" id="cancelBtn" class="cancel-btn">Cancel</button>
    </form>

    <section class="categories">
        {% for category, books in searchResults %}
            <div class="category" data-category="{{ category }}">
                <h2>{{ category|capitalize }}</h2>
                <ul class="books"></ul>
                <div class="pagination">
                    <button class="prev" data-category="{{ category }}">Back</button>
                    <button class="next" data-category="{{ category }}">Next</button>
                </div>
            </div>
        {% endfor %}
    </section>
</main>

<script>
    const createBookBtn = document.getElementById('createBookBtn');
    const createBookForm = document.getElementById('createBookForm');
    createBookBtn.addEventListener('click', () => {
        createBookForm.style.display = 'block';
    });
    const cancelBtn = document.getElementById('cancelBtn');
    cancelBtn.addEventListener('click', () => {
        createBookForm.reset();
        createBookForm.style.display = 'none';
    });
    window.addEventListener('click', (event) => {
        if (event.target === createBookForm) {
            createBookForm.style.display = 'none';
        }
    });
    createBookForm.addEventListener('click', (event) => {
        event.stopPropagation();
    });
    createBookForm.addEventListener('submit', function(event) {
        event.preventDefault();
        const formData = new FormData(this);
        fetch('/catalogue', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data && data.book_id) {
                    alert('Book created successfully with ID: ' + data.book_id);
                    createBookForm.reset();
                    createBookForm.style.display = 'none';
                    window.location.reload();
                } else {
                    alert('Failed to create book. Please check your input data.');
                }
            })
            .catch(error => console.error('Error:', error));


    });

    const booksData = JSON.parse('{{ searchResults|json_encode()|e('js') }}');

    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.category').forEach(categoryDiv => {
            const category = categoryDiv.dataset.category;
            const books = booksData[category];
            let currentPage = 1;
            const booksPerPage = 5;

            const displayBooks = (page) => {
                const startIndex = (page - 1) * booksPerPage;
                const endIndex = Math.min(startIndex + booksPerPage, books.length);
                const booksList = categoryDiv.querySelector('.books');
                booksList.innerHTML = '';

                for (let i = startIndex; i < endIndex; i++) {
                    const book = books[i];
                    const li = document.createElement("li");
                    li.classList.add("book-item");
                    li.dataset.bookId = book.id;
                    li.innerHTML = `
        <div class="book-details">
            <h3>${book.title}</h3>
            <p>Authors: ${book.author_names.join(', ')}</p>
            <img src="${book.cover_url}" alt="Cover Image">
        </div>
    `;
                    booksList.appendChild(li);
                }
            };

            const updatePagination = () => {
                categoryDiv.querySelector('.prev').disabled = currentPage === 1;
                categoryDiv.querySelector('.next').disabled = currentPage >= Math.ceil(books.length / booksPerPage);
            };

            categoryDiv.querySelector('.prev').addEventListener('click', () => {
                if (currentPage > 1) {
                    currentPage--;
                    displayBooks(currentPage);
                    updatePagination();
                }
            });

            categoryDiv.querySelector('.next').addEventListener('click', () => {
                if (currentPage < Math.ceil(books.length / booksPerPage)) {
                    currentPage++;
                    displayBooks(currentPage);
                    updatePagination();
                }
            });

            displayBooks(currentPage);
            updatePagination();
        });
    });

    document.addEventListener('DOMContentLoaded', () => {
        document.querySelector('.categories').addEventListener('click', (event) => {
            const clickedElement = event.target.closest('.book-item');
            if (clickedElement) {
                const bookId = clickedElement.dataset.bookId;
                window.location.href = `/catalogue/${bookId}`;
            }
        });
    });
  </script>
{% endblock %}
